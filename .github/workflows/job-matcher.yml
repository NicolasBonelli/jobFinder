name: Job Scraper & Matcher

on:
  schedule:
    # Ejecutar cada 6 horas (00:00, 06:00, 12:00, 18:00 UTC)
    - cron: '0 */6 * * *'
  
  # Permitir ejecución manual
  workflow_dispatch:

jobs:
  scrape-and-match:
    runs-on: ubuntu-latest
    timeout-minutes: 60  # Timeout de 1 hora
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
      
      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: 📦 Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: 🔧 Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Cambiar por tu región
      
      - name: 🕷️ Run Job Scraper
        run: |
          cd src
          python main.py
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
      
      - name: 🎯 Run Batch Matcher
        run: |
          cd src
          python batch_matcher.py
        env:
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
      
      - name: 📊 Upload execution logs
        if: always()  # Ejecutar aunque falle
        uses: actions/upload-artifact@v3
        with:
          name: execution-logs-${{ github.run_number }}
          path: |
            src/*.json
            src/profiles/
            src/results/
          retention-days: 7
      
      - name: 🔔 Notify n8n
        if: success()
        run: |
          curl -X POST "${{ secrets.N8N_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "status": "completed",
              "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'",
              "run_number": "${{ github.run_number }}",
              "jobs_processed": true
            }' || echo "Webhook notification failed"
      
      - name: 📝 Generate summary
        if: always()
        run: |
          echo "## 🤖 Job Matcher Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp:** $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "- **Run Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "src/scraped_jobs.json" ]; then
            JOB_COUNT=$(jq length src/scraped_jobs.json)
            echo "- **Jobs Scraped:** $JOB_COUNT" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -d "src/results" ]; then
            RESULT_COUNT=$(ls src/results/*.json 2>/dev/null | wc -l)
            echo "- **Users Processed:** $RESULT_COUNT" >> $GITHUB_STEP_SUMMARY
          fi